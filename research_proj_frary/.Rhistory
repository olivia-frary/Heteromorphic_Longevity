facet_tree(~group)  # Facet the tree based on the 'group' column
# Create a sample data frame with facet information
facet_data <- data.frame(
tip = c("A", "B", "C"),
group = c("Group1", "Group1", "Group2")  # Define the groups for each tip
)
# Merge the facet data with the tree
tree <- merge(tree, facet_data, by.x = "tip", by.y = "tip", all.x = TRUE)
tree2 <- read.tree("tree/tree2.txt") # load the tree file in
tree2$edge.length <- rep(1.5, Nedge(tree2))
p <- ggtree(tree2)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=d1,
geom=geom_point,
mapping=aes(x=life, color=sex))
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=d1,
geom=geom_segment,
aes(x=0, xend=gs_diff, y=y, yend=y, color=sex), size=10)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5)
tree2$edge.length <- rep(2, Nedge(tree2))
p <- ggtree(tree2)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=d1,
geom=geom_point,
mapping=aes(x=life, color=sex))
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=d1,
geom=geom_segment,
aes(x=0, xend=gs_diff, y=y, yend=y, color=sex), size=10)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5)
tree2$edge.length <- rep(1, Nedge(tree2))
p <- ggtree(tree2)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=d1,
geom=geom_point,
mapping=aes(x=life, color=sex))
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=d1,
geom=geom_segment,
aes(x=0, xend=gs_diff, y=y, yend=y, color=sex), size=10)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5)
p3 + theme_tree2()
+ geom_vline(xintercept = 0, alpha=0.5)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5, linetype = "dashed")
tree2 <- read.tree("tree/tree2.txt") # load the tree file in
p <- ggtree(tree2)
# add in the data you want
# currently this plot shows 22 of the 25 observations in a neighbor based phylogeny
df <- read_csv("short_complete_data.csv") %>%
filter(species != c("Ovis aries","Pan troglodytes")) %>%
filter(species != "Amblyomma cajennense")
d1 <- data.frame(id=tree2$tip.label,
life=df$ln_r_rlifespan,
gs_diff=df$gs_diff_mb,
sex=df$sex_determination)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=d1,
geom=geom_point,
mapping=aes(x=life, color=sex))
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=d1,
geom=geom_segment,
aes(x=0, xend=gs_diff, y=y, yend=y, color=sex), size=10) +
geom_vline(xintercept = 0, alpha=0.5)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5, linetype = "dashed")
tree2 <- read.tree("tree/tree2.txt") # load the tree file in
p <- ggtree(tree2)
# add in the data you want
# currently this plot shows 22 of the 25 observations in a neighbor based phylogeny
df <- read_csv("short_complete_data.csv") %>%
filter(species != c("Ovis aries","Pan troglodytes")) %>%
filter(species != "Amblyomma cajennense")
d1 <- data.frame(id=tree2$tip.label,
life=df$ln_r_rlifespan,
gs_diff=df$gs_diff_mb,
sex=df$sex_determination)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=d1,
geom=geom_point,
mapping=aes(x=life, color=sex))
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=d1,
geom=geom_segment,
aes(x=0, xend=gs_diff, y=y, yend=y, color=sex), size=10) +
geom_vline(xintercept = 0, alpha=0.5)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5, linetype = "dashed")
tree2 <- read.tree("tree/tree2.txt") # load the tree file in
p <- ggtree(tree2)
# add in the data you want
# currently this plot shows 22 of the 25 observations in a neighbor based phylogeny
df <- read_csv("short_complete_data.csv") %>%
filter(species != c("Ovis aries","Pan troglodytes")) %>%
filter(species != "Amblyomma cajennense")
d1 <- data.frame(id=tree2$tip.label,
life=df$ln_r_rlifespan,
gs_diff=df$gs_diff_mb,
sex=df$sex_determination)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=d1,
geom=geom_point,
mapping=aes(x=life, color=sex))
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=d1,
geom=geom_segment,
aes(x=0, xend=gs_diff, y=y, yend=y, color=sex), size=10)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5, linetype = "dashed")
tree2 <- read.tree("tree/tree2.txt") # load the tree file in
tree2$edge.length <- rep(1, Nedge(tree2))
p <- ggtree(tree2)
# add in the data you want
# currently this plot shows 22 of the 25 observations in a neighbor based phylogeny
df <- read_csv("short_complete_data.csv") %>%
filter(species != c("Ovis aries","Pan troglodytes")) %>%
filter(species != "Amblyomma cajennense")
d1 <- data.frame(id=tree2$tip.label,
life=df$ln_r_rlifespan,
gs_diff=df$gs_diff_mb,
sex=df$sex_determination)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=d1,
geom=geom_point,
mapping=aes(x=life, color=sex))
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=d1,
geom=geom_segment,
aes(x=0, xend=gs_diff, y=y, yend=y, color=sex), size=10)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5, linetype = "dashed")
tree2 <- read.tree("tree/tree2.txt") # load the tree file in
tree2$edge.length <- rep(1, Nedge(tree2))
p <- ggtree(tree2)
# add in the data you want
# currently this plot shows 22 of the 25 observations in a neighbor based phylogeny
df <- read_csv("short_complete_data.csv") %>%
filter(species != c("Ovis aries","Pan troglodytes")) %>%
filter(species != "Amblyomma cajennense")
d1 <- data.frame(id=tree2$tip.label,
life=df$ln_r_rlifespan,
gs_diff=df$gs_diff_mb,
sex=df$sex_determination)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=d1,
geom=geom_point,
mapping=aes(x=life, color=sex))
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=d1,
geom=geom_segment,
aes(x=0, xend=gs_diff, y=y, yend=y, color=sex), size=5)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5, linetype = "dashed")
dg %>%
ggplot(aes(x=ln_r_rlifespan, y=gs_diff_mb, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, size=0.5) +
geom_point() +
labs(x="Difference in Lifespan", y="Difference in Genome Size") +
theme_minimal()
#### looking at more specific genome data ####
# let's take a look at plotting the difference in genome size based on sex determination
dg <-
dl %>%
filter(gs_diff_mb != "NA")
library(tidyverse)
library(readr)
library(janitor)
library(skimr)
library(GGally)
library(shiny)
library(modelr)
library(MASS)
library(easystats)
#### load in and check out the data ####
# read in the data
df <- read_csv("analysis_data.csv") %>%
janitor::clean_names() %>%
mutate_at('ln_r_rlifespan', as.numeric)
head(df) # take a look at the variables
#### load in and check out the data ####
# read in the data
df <- read_csv("analysis_data.csv") %>%
janitor::clean_names() %>%
mutate_at('ln_r_rlifespan', as.numeric)
#### looking at lifespan data with larger subset ####
# take a look at the available lifespan data
dl <-
df %>%
filter(ln_r_rlifespan != "NA")
#### looking at more specific genome data ####
# let's take a look at plotting the difference in genome size based on sex determination
dg <-
dl %>%
filter(gs_diff_mb != "NA")
# fix the values for female heterogametic species so that they show homogametic - heterogametic
dg$gs_diff_mb <- ifelse(dg$sex_determination == "female heterogametic", -dg$gs_diff_mb, dg$gs_diff_mb)
dg %>%
ggplot(aes(x=ln_r_rlifespan, y=gs_diff_mb, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, size=0.5) +
geom_point() +
labs(x="Difference in Lifespan", y="Difference in Genome Size") +
theme_minimal()
lm_model <- lm(ln_r_rlifespan ~ gs_diff_mb, data = dg)
# Extract the coefficients from the model
intercept <- coef(lm_model)[1]
slope <- coef(lm_model)[2]
# Create a scatter plot with a linear regression line
dg %>%
ggplot(aes(x=gs_diff_mb, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, size=0.5) +
geom_point() +
labs(x="Difference in Lifespan", y="Difference in Genome Size") +
geom_text(aes(x = 8, y = 18),
label = paste("y =", round(intercept, 2), "+", round(slope, 2), "x"),
parse = TRUE,
hjust = 0) +
theme_minimal()
dg %>%
ggplot(aes(x=gs_diff_mb, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, size=0.5) +
geom_point()
dg %>%
ggplot(aes(x=gs_diff_mb, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, size=0.5) +
geom_point() +
labs(x="Difference in Lifespan", y="Difference in Genome Size")
dg %>%
ggplot(aes(x=gs_diff_mb, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, size=0.5) +
geom_point() +
labs(x="Difference in Lifespan", y="Difference in Genome Size") +
geom_text(aes(x = 8, y = 18),
label = paste("y =", round(intercept, 2), "+", round(slope, 2), "x"),
parse = TRUE,
hjust = 0)
# Create a scatter plot with a linear regression line
dg %>%
ggplot(aes(x=gs_diff_mb, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, size=0.5) +
geom_point() +
labs(x="Difference in Lifespan", y="Difference in Genome Size") +
geom_text(aes(x = 8, y = 18),
label = paste("y =", round(intercept, 2), "+", round(slope, 2), "x"),
hjust = 0) +
theme_minimal()
# Create a scatter plot with a linear regression line
dg %>%
ggplot(aes(x=gs_diff_mb, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, size=0.5) +
geom_point() +
labs(x="Difference in Lifespan", y="Difference in Genome Size") +
geom_text(label = paste("y =", round(intercept, 2), "+", round(slope, 2), "x"),
hjust = 0) +
theme_minimal()
lm_eqn <- function(df){
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
# Create a scatter plot with a linear regression line
p <- dg %>%
ggplot(aes(x=gs_diff_mb, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, size=0.5) +
geom_point() +
theme_minimal()
p1 <- p + geom_text(x = 25, y = 300, label = lm_eqn(dg), parse = TRUE)
lm_eqn <- function(df){
m <- lm(ln_r_rlifespan ~ gs_diff_mb, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
# Create a scatter plot with a linear regression line
p <- dg %>%
ggplot(aes(x=gs_diff_mb, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, size=0.5) +
geom_point() +
theme_minimal()
p1 <- p + geom_text(x = 25, y = 300, label = lm_eqn(dg), parse = TRUE)
p1
# Create a scatter plot with a linear regression line
dg %>%
ggplot(aes(x=gs_diff_mb, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, size=0.5) +
geom_point() +
theme_minimal()
# this plot is set so that the predictor is on the x-axis, and response is on y-axis
dg[dg$gs_diff_mb < 100 & dg$gs_diff_mb > -100,] %>%
ggplot(aes(x=gs_diff_mb, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm", se=FALSE , color='gray', linetype=2, size=0.5) +
geom_point() +
labs(x="Difference in Genome Size", y="Difference in Lifespan") +
theme_minimal()
# Create a scatter plot with a linear regression line
dg %>%
ggplot(aes(x=ln_r_rlifespan, y=gs_diff_mb, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, size=0.5) +
geom_point() +
theme_minimal()
dg %>%
ggplot(aes(x=gs_diff_mb, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, size=0.5) +
geom_point() +
theme_minimal()
# ignoring the points that reside outside of 100Mb difference on each side.
dg[dg$gs_diff_mb < 100 & dg$gs_diff_mb > -100,] %>%
ggplot(aes(x=ln_r_rlifespan, y=gs_diff_mb, color=sex_determination)) +
geom_smooth(method="lm", se=FALSE , color='gray', linetype=2, size=0.5) +
geom_point() +
labs(x="Difference in Lifespan", y="Difference in Genome Size") +
theme_minimal()
# this plot is set so that the predictor is on the x-axis, and response is on y-axis
dg[dg$gs_diff_mb < 100 & dg$gs_diff_mb > -100,] %>%
ggplot(aes(x=gs_diff_mb, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm", se=FALSE , color='gray', linetype=2, size=0.5) +
geom_point() +
labs(x="Difference in Genome Size", y="Difference in Lifespan") +
theme_minimal()
# explain the line seen above
lm_mod <- lm(ln_r_rlifespan ~ gs_diff_mb, dg)
summary(lm_mod)
dg1 <- dg[dg$gs_diff_mb < 250 & dg$gs_diff_mb > -250,]
lm_mod2 <- lm(ln_r_rlifespan ~ gs_diff_mb, dg1)
summary(lm_mod2)
dg2 <- dg[dg$gs_diff_mb < 100 & dg$gs_diff_mb > -100,]
dg2 <- dg[dg$gs_diff_mb < 100 & dg$gs_diff_mb > -100,]
lm_mod3 <- lm(ln_r_rlifespan ~ gs_diff_mb, dg2)
summary(lm_mod3)
summary(lm_mod2)
summary(lm_mod3)
sum_lm_mod2 <- summary(lm_mod2)
sum_lm_mod2$r.squared
compare_performance(lm_mod, lm_mod2, lm_mod3)
sum_lm_mod3 <- summary(lm_mod3)
sum_lm_mod3$r.squared # 0.005538
sum_lm_mod <- summary(lm_mod)
sum_lm_mod
sum_lm_mod$r.squared # 0.005538
# r^2 = -0.07775808^2
(-0.07775808)^2 # percentage of the variability in lifespan explained by genome_diff
source("~/.active-rstudio-document", echo=TRUE)
library(tidyverse)
library(readr)
library(janitor)
library(skimr)
library(GGally)
library(shiny)
library(modelr)
library(MASS)
library(easystats)
#### load in and check out the data ####
# read in the data
df <- read_csv("analysis_data.csv") %>%
janitor::clean_names() %>%
mutate_at('ln_r_rlifespan', as.numeric)
#### looking at lifespan data with larger subset ####
# take a look at the available lifespan data
dl <-
df %>%
filter(ln_r_rlifespan != "NA")
#### looking at more specific genome data ####
# let's take a look at plotting the difference in genome size based on sex determination
dg <-
dl %>%
filter(gs_diff_mb != "NA")
# explain the line seen above
lm_mod <- lm(ln_r_rlifespan ~ gs_diff_mb, dg)
sum_lm_mod <- summary(lm_mod)
# equation: y = 1.1276 + 0.0002x
plot(lm_mod)
plot(lm_mod)
ggplot(aes(x=ln_r_rlifespan, y=gs_diff_mb, color=sex_determination)) +
geom_smooth(method="lm", se=FALSE , color='gray', linetype=2, size=0.5) +
geom_point() +
labs(x="Difference in Lifespan", y="Difference in Genome Size") +
theme_minimal()
# explain the line seen above
lm_mod <- lm(gs_diff_mb ~ ln_r_rlifespan, dg)
# equation: y = 1.1276 + 0.0002x
plot(lm_mod)
# equation: y = 1.1276 + 0.0002x
plot(lm_mod)
lm_mod1 <- lm(ln_r_rlifespan ~ gs_diff_mb, dg)
# equation: y = 1.1276 + 0.0002x
plot(lm_mod1)
library(tidyverse)
df <- read_csv("insectgs.csv")
View(df)
df %>% filter(order == "Coleoptera")
df %>% filter(order = "Coleoptera")
?filter()
df %>% filter(order == "Coleoptera")
class(df)
df <- read_csv("insectgs.csv") %>%
filter(order == "Coleoptera")
df %>% filter(Order == "Coleoptera")
df <- read_csv("insectgs.csv") %>%
filter(Order == "Coleoptera")
head(df)
# export a csv of Coleoptera genome size data
# export species list for phylogenies
write.csv(df$Species, "coleoptera_species")
# export a csv of Coleoptera genome size data
# export species list for phylogenies
write.csv(df$Species, "coleoptera_species.csv")
# export a csv of Coleoptera genome size data
# export species list for phylogenies
write.csv(df$Species, "coleoptera_species.csv", row.names = FALSE)
# export a csv of Coleoptera genome size data
# export species list for phylogenies
write.csv(df$Species, "coleoptera_species.csv", row.names = FALSE)
#### faster code ####
# Try the above code but faster - took about 5 minutes
input <- read.fas("accession/mitochondrion_seq_format.fasta")
#### Attempting to interface with MAFFT through R ####
# install.packages("ips")
#install.packages("adegenet")
library(ips)
#### faster code ####
# Try the above code but faster - took about 5 minutes
input <- read.fas("accession/mitochondrion_seq_format.fasta")
View(input)
# still need to do the exec file pathway differently :)
output2 <- mafft(input, exec="C:/Users/olivi/mafft-7.520-win64-signed/mafft-win/mafft.bat",
quiet = TRUE)
library(tidyverse)
library(readr)
library(janitor)
library(skimr)
library(GGally)
library(shiny)
library(modelr)
library(MASS)
library(easystats)
library(easystats)
easystats::easystats_update()
easystats::easystats_update()
#### load in and check out the data ####
# read in the data
df <- read_csv("analysis_data.csv") %>%
janitor::clean_names() %>%
mutate_at('ln_r_rlifespan', as.numeric)
#### looking at lifespan data with larger subset ####
# take a look at the available lifespan data
dl <-
df %>%
filter(ln_r_rlifespan != "NA")
# this plot shows the difference in lifespan based on species
# the more positive the value the greater the difference between the homogametic
# sex and heterogametic sex.
# try to re order the species by family - so far no luck with reorder or sort
dl %>%
ggplot(aes(x=ln_r_rlifespan,y=species, color=sex_determination)) +
geom_point() +
geom_vline(xintercept = 0) +
theme(axis.text.y = element_text(size=7))
library(ape)
library(seqinr)
library(janitor)
library(tidyverse)
# read in your file of accession numbers to feed into script
df <- read_csv("accession/accession_numbers_fixed.csv") %>%
clean_names()
gene_accession_numbers <- df$coi_acc
# Fetching the sequences from GenBank
gene_sequences <- read.GenBank(gene_accession_numbers)
#accession number corresponding to species names/gene
gene_sequences_GenBank_IDs <- paste(attr(gene_sequences, "species"), names(gene_sequences), sep=" coi ")
# Write the sequences to a FASTA file
write.dna(gene_sequences, file = "accession/coi.fasta", format = "fasta", append = FALSE)
# Read the sequences from the FASTA file
gene_seq_format <- read.FASTA(file = "accession/coi.fasta")
# Modify the names of the sequences
names(gene_seq_format) <- gene_sequences_GenBank_IDs
# Write sequences to a new FASTA file
write.FASTA(gene_seq_format, file = "accession/coi_seq_format.fasta")
# read in your file of accession numbers to feed into script
df <- read_csv("accession/accession_numbers_fixed.csv") %>%
clean_names()
gene_accession_numbers <- df$coi_acc
# Fetching the sequences from GenBank
gene_sequences <- read.GenBank(gene_accession_numbers)
#accession number corresponding to species names/gene
gene_sequences_GenBank_IDs <- paste(attr(gene_sequences, "species"), names(gene_sequences), sep=" coi ")
# Write the sequences to a FASTA file
write.dna(gene_sequences, file = "accession/coi.fasta", format = "fasta", append = FALSE)
# Read the sequences from the FASTA file
gene_seq_format <- read.FASTA(file = "accession/coi.fasta")
# Modify the names of the sequences
names(gene_seq_format) <- gene_sequences_GenBank_IDs
# Write sequences to a new FASTA file
write.FASTA(gene_seq_format, file = "accession/coi_seq_format.fasta")
View(df)
# read in your file of accession numbers to feed into script
df <- read_csv("accession/accession_numbers_fixed.csv") %>%
clean_names()
gene_accession_numbers <- df$coi_acc
# Fetching the sequences from GenBank
gene_sequences <- read.GenBank(gene_accession_numbers)
#accession number corresponding to species names/gene
gene_sequences_GenBank_IDs <- paste(attr(gene_sequences, "species"), names(gene_sequences), sep=" coi ")
# Write the sequences to a FASTA file
write.dna(gene_sequences, file = "accession/coi.fasta", format = "fasta", append = FALSE)
# Read the sequences from the FASTA file
gene_seq_format <- read.FASTA(file = "accession/coi.fasta")
# Modify the names of the sequences
names(gene_seq_format) <- gene_sequences_GenBank_IDs
# Write sequences to a new FASTA file
write.FASTA(gene_seq_format, file = "accession/coi_seq_format.fasta")
View(df)
