"Drosophila montana","Drosophila mulleri","Drosophila sechellia",
"Drosophila simulans","Drosophila virilis","Drosophila yakuba",
"Episyrphus balteatus","Lucilia cuprina","Nauphoeta cinerea",
"Ovis aries","Pan troglodytes","Symphalangus syndactylus",
"Chrysomya megacephala","Drosophila bipectinata","Musca domestica",
"Periplaneta americana")
treemafft$tip.label <- new_tiplabels
td$dat$tip.label
td <- as.treedata.table(tree = treemafft, data=d1)
View(d1)
View(d1)
df <- read_csv("short_complete_data.csv")
d1 <- data.frame(correct_species = df$species,
life=df$ln_r_rlifespan,
gs_diff=df$gs_diff_mb,
sex=df$sex_determination)
View(d1)
View(d1)
# let's plot the proportion data alongside our tree and lifespan data like we've done before
df <- read_csv("short_complete_data.csv")
d1 <- data.frame(correct_species = df$species,
life=df$ln_r_rlifespan,
gs_diff=df$gs_diff_mb,
sex=df$sex_determination)
treemafft <- read.nexus("tree/first_tree") # better tree made with Dr. Hjelmen
new_tiplabels <- c("Amblyomma cajennense","Aphelocoma coerulescens","Callosobruchus maculatus",
"Cochliomyia hominivorax","Drosophila ananassae","Drosophila erecta",
"Drosophila kikkawai","Drosophila melanogaster","Drosophila mojavensis",
"Drosophila montana","Drosophila mulleri","Drosophila sechellia",
"Drosophila simulans","Drosophila virilis","Drosophila yakuba",
"Episyrphus balteatus","Lucilia cuprina","Nauphoeta cinerea",
"Ovis aries","Pan troglodytes","Symphalangus syndactylus",
"Chrysomya megacephala","Drosophila bipectinata","Musca domestica",
"Periplaneta americana")
treemafft$tip.label <- new_tiplabels
td <- as.treedata.table(tree = treemafft, data=d1)
p <- ggtree(treemafft)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=td$dat,
geom=geom_point,
mapping=aes(x=life, color=sex))
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=td$dat,
geom=geom_segment,
aes(x=0, xend=gs_diff, y=y, yend=y, color=sex), size=10)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5, linetype = "dashed")
treemafft$tip.label
sub_treemafft <- drop.tip(treemafft, tip = 20) # removes pan troglodytes because we know that one is weird and wrong
sub_treemafft <- drop.tip(sub_treemafft, tip = 19) # removes ovis aries because it is so big we can't see anything else
sub_treemafft <- drop.tip(sub_treemafft, tip = 1) # removes Amblyomma cajennense because it is big
sub_treemafft$tip.label
p <- ggtree(sub_treemafft)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=td$dat,
geom=geom_point,
mapping=aes(x=life, color=sex))
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=td$dat,
geom=geom_segment,
aes(x=0, xend=gs_diff, y=y, yend=y, color=sex), size=5)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5, linetype = "dashed")
View(td)
td$dat
write.csv(dg,"gs_test_data.csv", row.names = FALSE)
# let's plot the proportion data alongside our tree and lifespan data like we've done before
df <- read_csv("gs_test_data.csv")
View(df)
d1 <- data.frame(correct_species = df$species,
life=df$ln_r_rlifespan,
gs_prop=df$gs_prop,
sex=df$sex_determination)
treemafft <- read.nexus("tree/first_tree") # better tree made with Dr. Hjelmen
new_tiplabels <- c("Amblyomma cajennense","Aphelocoma coerulescens","Callosobruchus maculatus",
"Cochliomyia hominivorax","Drosophila ananassae","Drosophila erecta",
"Drosophila kikkawai","Drosophila melanogaster","Drosophila mojavensis",
"Drosophila montana","Drosophila mulleri","Drosophila sechellia",
"Drosophila simulans","Drosophila virilis","Drosophila yakuba",
"Episyrphus balteatus","Lucilia cuprina","Nauphoeta cinerea",
"Ovis aries","Pan troglodytes","Symphalangus syndactylus",
"Chrysomya megacephala","Drosophila bipectinata","Musca domestica",
"Periplaneta americana")
treemafft$tip.label <- new_tiplabels
td <- as.treedata.table(tree = treemafft, data=d1)
td$dat
p <- ggtree(treemafft)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=td$dat,
geom=geom_point,
mapping=aes(x=life, color=sex))
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=td$dat,
geom=geom_segment,
aes(x=0, xend=gs_diff, y=y, yend=y, color=sex), size=10)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5, linetype = "dashed")
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=td$dat,
geom=geom_segment,
aes(x=0, xend=gs_prop, y=y, yend=y, color=sex), size=10)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5, linetype = "dashed")
treemafft$tip.label
sub_treemafft <- drop.tip(treemafft, tip = 20) # removes pan troglodytes because we know that one is weird and wrong
sub_treemafft <- drop.tip(sub_treemafft, tip = 19) # removes ovis aries because it is so big we can't see anything else
sub_treemafft <- drop.tip(sub_treemafft, tip = 1) # removes Amblyomma cajennense because it is big
sub_treemafft$tip.label
p <- ggtree(sub_treemafft)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=td$dat,
geom=geom_point,
mapping=aes(x=life, color=sex))
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=td$dat,
geom=geom_segment,
aes(x=0, xend=gs_prop, y=y, yend=y, color=sex), size=5)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5, linetype = "dashed")
library(tidyverse)
#### trying out the normalized genome-size stuff ####
library(tidyverse)
library(janitor)
library(ggtree)
# load in the data
df <- read_csv("analysis_data.csv") %>%
janitor::clean_names() %>%
mutate_at('ln_r_rlifespan', as.numeric)
# subset data to our focus data
dl <-
df %>%
filter(ln_r_rlifespan != "NA")
dg <-
dl %>%
filter(gs_diff_mb != "NA")
# change the female heterogametic gs_diff_mb equations
dg$gs_diff_mb <- ifelse(dg$sex_determination == "female heterogametic", -dg$gs_diff_mb, dg$gs_diff_mb)
# lets add a column that gives the average total genome
dg %>% names
dg$gs_ave <- (dg$gs_female_mb + dg$gs_male_mb)/2
# lets add a column that gives the proportion of difference:average
dg$gs_prop <- dg$gs_diff_mb/dg$gs_ave
write.csv(dg,"gs_test_data.csv", row.names = FALSE)
# now what does plotting the proportion by the normalized lifespan difference do???
dg %>%
ggplot(aes(x=gs_prop, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, size=0.5) +
geom_point() +
theme_minimal()
# honestly the data does not look very different...
# how is there one with a difference that is near 0.75 of the total genome size??? It's Ovis aries man.
# get rid of outliers (proportions less than 0.25) - not official
dg[dg$gs_prop < 0.25,] %>%
ggplot(aes(x=gs_prop, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm", color='black', size=0.5) +
geom_point() +
theme_minimal()
# similar to the absolute gs graph, there is just a cloud of points with no correlation
# let's plot the proportion data alongside our tree and lifespan data like we've done before
df <- read_csv("gs_test_data.csv")
d1 <- data.frame(correct_species = df$species,
life=df$ln_r_rlifespan,
gs_prop=df$gs_prop,
sex=df$sex_determination)
treemafft <- read.nexus("tree/first_tree") # better tree made with Dr. Hjelmen
new_tiplabels <- c("Amblyomma cajennense","Aphelocoma coerulescens","Callosobruchus maculatus",
"Cochliomyia hominivorax","Drosophila ananassae","Drosophila erecta",
"Drosophila kikkawai","Drosophila melanogaster","Drosophila mojavensis",
"Drosophila montana","Drosophila mulleri","Drosophila sechellia",
"Drosophila simulans","Drosophila virilis","Drosophila yakuba",
"Episyrphus balteatus","Lucilia cuprina","Nauphoeta cinerea",
"Ovis aries","Pan troglodytes","Symphalangus syndactylus",
"Chrysomya megacephala","Drosophila bipectinata","Musca domestica",
"Periplaneta americana")
treemafft$tip.label <- new_tiplabels
td <- as.treedata.table(tree = treemafft, data=d1)
td$dat
p <- ggtree(treemafft)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=td$dat,
geom=geom_point,
mapping=aes(x=life, color=sex))
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=td$dat,
geom=geom_segment,
aes(x=0, xend=gs_prop, y=y, yend=y, color=sex), size=10)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5, linetype = "dashed")
treemafft$tip.label
sub_treemafft <- drop.tip(treemafft, tip = 20) # removes pan troglodytes because we know that one is weird and wrong
sub_treemafft <- drop.tip(sub_treemafft, tip = 19) # removes ovis aries because it is so big we can't see anything else
sub_treemafft <- drop.tip(sub_treemafft, tip = 1) # removes Amblyomma cajennense because it is big
sub_treemafft$tip.label
p <- ggtree(sub_treemafft)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=td$dat,
geom=geom_point,
mapping=aes(x=life, color=sex))
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=td$dat,
geom=geom_segment,
aes(x=0, xend=gs_prop, y=y, yend=y, color=sex), size=5)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5, linetype = "dashed")
library(ape)
library(seqinr)
library(janitor)
library(tidyverse)
# read in your file of accession numbers to feed into script
df <- read_csv("accession/accession_numbers_fixed.csv") %>%
clean_names()
gene_accession_numbers <- df$coi_acc
# Fetching the sequences from GenBank
gene_sequences <- read.GenBank(gene_accession_numbers)
#accession number corresponding to species names/gene
gene_sequences_GenBank_IDs <- paste(attr(gene_sequences, "species"), names(gene_sequences), sep=" coi ")
# Write the sequences to a FASTA file
write.dna(gene_sequences, file = "accession/coi.fasta", format = "fasta", append = FALSE)
# Read the sequences from the FASTA file
gene_seq_format <- read.FASTA(file = "accession/coi.fasta")
# Modify the names of the sequences
names(gene_seq_format) <- gene_sequences_GenBank_IDs
# Write sequences to a new FASTA file
write.FASTA(gene_seq_format, file = "fastas_genes/coi_seq_format.fasta")
library(ape)
library(seqinr)
library(janitor)
library(tidyverse)
# read in your file of accession numbers to feed into script
df <- read_csv("accession/accession_numbers_fixed.csv") %>%
clean_names()
gene_accession_numbers <- df$coi_acc
# Fetching the sequences from GenBank
gene_sequences <- read.GenBank(gene_accession_numbers)
# creates a list of DNAbins
#accession number corresponding to species names/gene
gene_sequences_GenBank_IDs <- paste(attr(gene_sequences, "species"), names(gene_sequences), sep=" coi ")
#, nbcol = 6, colsep = " ", colw = 10 -> possible addition but I do not think it is needed.
# Write the sequences to a FASTA file
write.dna(gene_sequences, file = "accession/coi_pre.fasta", format = "fasta", append = FALSE)
# Read the sequences from the FASTA file
gene_seq_format <- read.FASTA(file = "accession/coi_pre.fasta")
# Modify the names of the sequences
names(gene_seq_format) <- gene_sequences_GenBank_IDs
# Write sequences to a new FASTA file
write.FASTA(gene_seq_format, file = "fastas_genes/coi.fasta")
# this output a nice multi fasta, I just don't know for sure if I have all the species I'm aiming for
library(ape)
library(seqinr)
library(janitor)
library(tidyverse)
# read in your file of accession numbers to feed into script
df <- read_csv("accession/accession_numbers_fixed.csv") %>%
clean_names()
View(df)
library(ape)
library(seqinr)
library(janitor)
library(tidyverse)
# read in your file of accession numbers to feed into script
df <- read_csv("accession/accession_numbers_fixed.csv") %>%
clean_names()
gene_accession_numbers <- df$mitochondrion_acc
# Fetching the sequences from GenBank
gene_sequences <- read.GenBank(gene_accession_numbers)
# creates a list of DNAbins
#accession number corresponding to species names/gene
gene_sequences_GenBank_IDs <- paste(attr(gene_sequences, "species"), names(gene_sequences), sep=" mitochondrion ")
#, nbcol = 6, colsep = " ", colw = 10 -> possible addition but I do not think it is needed.
# Write the sequences to a FASTA file
write.dna(gene_sequences, file = "accession/mitochondrion_pre.fasta", format = "fasta", append = FALSE)
# Read the sequences from the FASTA file
gene_seq_format <- read.FASTA(file = "accession/mitochondrion_pre.fasta")
# Modify the names of the sequences
names(gene_seq_format) <- gene_sequences_GenBank_IDs
# Write sequences to a new FASTA file
write.FASTA(gene_seq_format, file = "fastas_genes/mitochondrion.fasta")
# this output a nice multi fasta, I just don't know for sure if I have all the species I'm aiming for
library(ape)
library(seqinr)
library(janitor)
library(tidyverse)
# read in your file of accession numbers to feed into script
df <- read_csv("accession/accession_numbers_fixed.csv") %>%
clean_names()
gene_accession_numbers <- df$coii_acc
# Fetching the sequences from GenBank
gene_sequences <- read.GenBank(gene_accession_numbers)
# creates a list of DNAbins
#accession number corresponding to species names/gene
gene_sequences_GenBank_IDs <- paste(attr(gene_sequences, "species"), names(gene_sequences), sep=" coii ")
#, nbcol = 6, colsep = " ", colw = 10 -> possible addition but I do not think it is needed.
# Write the sequences to a FASTA file
write.dna(gene_sequences, file = "accession/coii_pre.fasta", format = "fasta", append = FALSE)
# Read the sequences from the FASTA file
gene_seq_format <- read.FASTA(file = "accession/coii_pre.fasta")
# Modify the names of the sequences
names(gene_seq_format) <- gene_sequences_GenBank_IDs
# Write sequences to a new FASTA file
write.FASTA(gene_seq_format, file = "fastas_genes/coii.fasta")
# this output a nice multi fasta, I just don't know for sure if I have all the species I'm aiming for
library(ape)
library(seqinr)
library(janitor)
library(tidyverse)
# read in your file of accession numbers to feed into script
df <- read_csv("accession/accession_numbers_fixed.csv") %>%
clean_names()
gene_accession_numbers <- df$coiii_acc
# Fetching the sequences from GenBank
gene_sequences <- read.GenBank(gene_accession_numbers)
# creates a list of DNAbins
#accession number corresponding to species names/gene
gene_sequences_GenBank_IDs <- paste(attr(gene_sequences, "species"), names(gene_sequences), sep=" coiii ")
#, nbcol = 6, colsep = " ", colw = 10 -> possible addition but I do not think it is needed.
# Write the sequences to a FASTA file
write.dna(gene_sequences, file = "accession/coiii_pre.fasta", format = "fasta", append = FALSE)
# Read the sequences from the FASTA file
gene_seq_format <- read.FASTA(file = "accession/coiii_pre.fasta")
# Modify the names of the sequences
names(gene_seq_format) <- gene_sequences_GenBank_IDs
# Write sequences to a new FASTA file
write.FASTA(gene_seq_format, file = "fastas_genes/coiii.fasta")
# this output a nice multi fasta, I just don't know for sure if I have all the species I'm aiming for
library(ape)
library(seqinr)
library(janitor)
library(tidyverse)
# read in your file of accession numbers to feed into script
df <- read_csv("accession/accession_numbers_fixed.csv") %>%
clean_names()
gene_accession_numbers <- df$cytb_acc
# Fetching the sequences from GenBank
gene_sequences <- read.GenBank(gene_accession_numbers)
# creates a list of DNAbins
#accession number corresponding to species names/gene
gene_sequences_GenBank_IDs <- paste(attr(gene_sequences, "species"), names(gene_sequences), sep=" cytb ")
#, nbcol = 6, colsep = " ", colw = 10 -> possible addition but I do not think it is needed.
# Write the sequences to a FASTA file
write.dna(gene_sequences, file = "accession/cytb_pre.fasta", format = "fasta", append = FALSE)
# Read the sequences from the FASTA file
gene_seq_format <- read.FASTA(file = "accession/cytb_pre.fasta")
# Modify the names of the sequences
names(gene_seq_format) <- gene_sequences_GenBank_IDs
# Write sequences to a new FASTA file
write.FASTA(gene_seq_format, file = "fastas_genes/cytb.fasta")
# this output a nice multi fasta, I just don't know for sure if I have all the species I'm aiming for
library(ape)
library(seqinr)
library(janitor)
library(tidyverse)
# read in your file of accession numbers to feed into script
df <- read_csv("accession/accession_numbers_fixed.csv") %>%
clean_names()
gene_accession_numbers <- df$hunchback_acc
# Fetching the sequences from GenBank
gene_sequences <- read.GenBank(gene_accession_numbers)
# creates a list of DNAbins
#accession number corresponding to species names/gene
gene_sequences_GenBank_IDs <- paste(attr(gene_sequences, "species"), names(gene_sequences), sep=" hunchback ")
#, nbcol = 6, colsep = " ", colw = 10 -> possible addition but I do not think it is needed.
# Write the sequences to a FASTA file
write.dna(gene_sequences, file = "accession/hunchback_pre.fasta", format = "fasta", append = FALSE)
# Read the sequences from the FASTA file
gene_seq_format <- read.FASTA(file = "accession/hunchback_pre.fasta")
# Modify the names of the sequences
names(gene_seq_format) <- gene_sequences_GenBank_IDs
# Write sequences to a new FASTA file
write.FASTA(gene_seq_format, file = "fastas_genes/hunchback.fasta")
# this output a nice multi fasta, I just don't know for sure if I have all the species I'm aiming for
#### trying out the normalized genome-size stuff ####
library(tidyverse)
library(janitor)
library(ggtree)
# load in the data
df <- read_csv("analysis_data.csv") %>%
janitor::clean_names() %>%
mutate_at('ln_r_rlifespan', as.numeric)
# subset data to our focus data
dl <-
df %>%
filter(ln_r_rlifespan != "NA")
dg <-
dl %>%
filter(gs_diff_mb != "NA")
# change the female heterogametic gs_diff_mb equations
dg$gs_diff_mb <- ifelse(dg$sex_determination == "female heterogametic", -dg$gs_diff_mb, dg$gs_diff_mb)
# lets add a column that gives the average total genome
dg %>% names
dg$gs_ave <- (dg$gs_female_mb + dg$gs_male_mb)/2
# lets add a column that gives the proportion of difference:average
dg$gs_prop <- dg$gs_diff_mb/dg$gs_ave
write.csv(dg,"gs_test_data.csv", row.names = FALSE)
# now what does plotting the proportion by the normalized lifespan difference do???
dg %>%
ggplot(aes(x=gs_prop, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, size=0.5) +
geom_point() +
theme_minimal()
# honestly the data does not look very different...
# how is there one with a difference that is near 0.75 of the total genome size??? It's Ovis aries man.
# get rid of outliers (proportions less than 0.25) - not official
dg[dg$gs_prop < 0.25,] %>%
ggplot(aes(x=gs_prop, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm", color='black', size=0.5) +
geom_point() +
theme_minimal()
# similar to the absolute gs graph, there is just a cloud of points with no correlation
# let's plot the proportion data alongside our tree and lifespan data like we've done before
df <- read_csv("gs_test_data.csv")
d1 <- data.frame(correct_species = df$species,
life=df$ln_r_rlifespan,
gs_prop=df$gs_prop,
sex=df$sex_determination)
treemafft <- read.nexus("tree/first_tree") # better tree made with Dr. Hjelmen
# conduct a pic analysis on coi consensus tree
library(ape)
# conduct a pic analysis on coi consensus tree
?library(ape)
?ape
# load in the data file
data1 <- read.csv("short_complete_data.csv")
# load in the data file
data <- read.csv("short_complete_data.csv")
View(data)
# load in the data file
data <- read.csv("gs_test_data.csv")
View(data)
# load in the consensus tree
tree <- read.tree("tree_genes/coi_consensus")
# load in the consensus tree
tree <- read.tree("trees_genes/coi_consensus")
# load in the consensus tree
tree <- read.nexus("trees_genes/coi_consensus")
View(data)
# try pic transformation
gsdiff_pic<-pic(log(data$gs_diff_mb), phy=tree)
tree$tip.label
tree$tip.label <- new_tiplabels
# old and ugly solution
new_tiplabels <- c("Amblyomma cajennense","Aphelocoma coerulescens","Callosobruchus maculatus",
"Cochliomyia hominivorax","Drosophila ananassae","Drosophila erecta",
"Drosophila kikkawai","Drosophila melanogaster","Drosophila mojavensis",
"Drosophila montana","Drosophila mulleri","Drosophila sechellia",
"Drosophila simulans","Drosophila virilis","Drosophila yakuba",
"Episyrphus balteatus","Lucilia cuprina","Nauphoeta cinerea",
"Ovis aries","Pan troglodytes","Symphalangus syndactylus",
"Chrysomya megacephala","Drosophila bipectinata","Musca domestica",
"Periplaneta americana")
tree$tip.label <- new_tiplabels
# try pic transformation
gsdiff_pic<-pic(log(data$gs_diff_mb), phy=tree) # produces an error because of tip.labels I think
#PGLS through caper on BIO 1
#we need this to prevent an error with the next function dealing with node names and tip label
#tree1$node.label <- NULL
#bio1_pgls1 <- comparative.data(tree1, data1, Species, vcv = TRUE)
#make empty matrix
output.table<-matrix(,nrow=21, ncol=8)
View(data)
View(output.table)
# conduct a pic analysis on coi consensus tree
# pic means phylogenetically independent contrasts
library(ape)
# load in the data file
data <- read.csv("gs_test_data.csv")
# load in the consensus tree
tree <- read.nexus("trees_genes/coi_consensus")
tree$tip.label # some of these are reversed and ummmm no thank you
# old and ugly solution
new_tiplabels <- c("Amblyomma cajennense","Aphelocoma coerulescens","Callosobruchus maculatus",
"Cochliomyia hominivorax","Drosophila ananassae","Drosophila erecta",
"Drosophila kikkawai","Drosophila melanogaster","Drosophila mojavensis",
"Drosophila montana","Drosophila mulleri","Drosophila sechellia",
"Drosophila simulans","Drosophila virilis","Drosophila yakuba",
"Episyrphus balteatus","Lucilia cuprina","Nauphoeta cinerea",
"Ovis aries","Pan troglodytes","Symphalangus syndactylus",
"Chrysomya megacephala","Drosophila bipectinata","Musca domestica",
"Periplaneta americana")
tree$tip.label <- new_tiplabels
# try pic again
gsdiff_pic<-pic(log(data$gs_diff_mb), phy=tree) # produces an error because of tip.labels I think
log(data$gs_diff_mb)
# try pic again
gsdiff_pic<-pic(data, phy=tree) # error maybe because issue with negatives and the log
View(data)
td <- as.treedata.table(tree = tree, data=df)
library(treeio)
td <- as.treedata.table(tree = tree, data=df)
library(treedata.table)
td <- as.treedata.table(tree = tree, data=df)
# pic will assume the data is in the same order as the tree unless x has names
# ours doesn't so we're gonna reorder the data to match the tip labels
d1 <- data.frame(correct_species = df$species,
life=df$ln_r_rlifespan,
gs_diff=df$gs_diff_mb,
sex=df$sex_determination)
# pic will assume the data is in the same order as the tree unless x has names
# ours doesn't so we're gonna reorder the data to match the tip labels
d1 <- data.frame(correct_species = df$species,
life=df$ln_r_rlifespan,
gs_diff=df$gs_diff_mb,
sex=df$sex_determination)
# pic will assume the data is in the same order as the tree unless x has names
# ours doesn't so we're gonna reorder the data to match the tip labels
d1 <- data.frame(correct_species = df$species,
life=df$ln_r_rlifespan,
gs_diff=df$gs_diff_mb,
sex=df$sex_determination)
View(data)
td <- as.treedata.table(tree = tree, data=data)
td$dat
# try pic
gsdiff_pic<-pic(td$dat$gs_diff_mb, phy=tree) # error maybe because issue with negatives and the log
# make a summary statistics table?
output.table<-matrix(,nrow=21, ncol=8)
colnames(output.table)<-c("Variable", "Estimate", "St. Error", "t-value", "p-value", "r-square",
"Adj. r-square", "F-stat")
# try pic - I think this initial one should be the response variable
gsdiff_pic<-pic(td$dat$ln_r_rlifespan, phy=tree) # error maybe because issue with negatives and the log
