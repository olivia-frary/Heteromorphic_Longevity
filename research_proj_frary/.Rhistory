class(td)
td1 <- as.data.frame(td)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=td$dat,
geom=geom_point,
mapping=aes(x=life, color=sex))
p2
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=td$dat,
geom=geom_segment,
aes(x=0, xend=gs_diff, y=y, yend=y, color=sex), size=10)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5, linetype = "dashed")
# now lets remove the pesky outliers???
# the freaking sheep is so annoyinggggg
treemafft$edge
# now lets remove the pesky outliers???
# the freaking sheep is so annoyinggggg
treemafft$tip.label
sub_treemafft <- drop.tip(treemafft, tip = 20) # removes pan troglodytes because we know that one is weird and wrong
sub_treemafft <- drop.tip(sub_treemafft, tip = 19) # removes ovis aries because it is so big we can't see anything else
sub_treemafft$tip.label
p <- ggtree(sub_treemafft)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=td$dat,
geom=geom_point,
mapping=aes(x=life, color=sex))
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=td$dat,
geom=geom_segment,
aes(x=0, xend=gs_diff, y=y, yend=y, color=sex), size=10)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5, linetype = "dashed")
td$dat
sub_treemafft <- drop.tip(sub_treemafft, tip = 1) # removes Amblyomma cajennense because it is big
sub_treemafft$tip.label
p <- ggtree(sub_treemafft)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=td$dat,
geom=geom_point,
mapping=aes(x=life, color=sex))
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=td$dat,
geom=geom_segment,
aes(x=0, xend=gs_diff, y=y, yend=y, color=sex), size=10)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5, linetype = "dashed")
ggsave("tree/facet_tree1.png")
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=td$dat,
geom=geom_segment,
aes(x=0, xend=gs_diff, y=y, yend=y, color=sex), size=5)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5, linetype = "dashed")
ggsave("tree/facet_tree1.png")
library(tidyverse)
library(readr)
library(janitor)
library(skimr)
library(GGally)
library(shiny)
library(modelr)
library(MASS)
library(easystats)
library(plotly)
#### load in and check out the data ####
# read in the data
df <- read_csv("analysis_data.csv") %>%
janitor::clean_names() %>%
mutate_at('ln_r_rlifespan', as.numeric)
#### looking at lifespan data with larger subset ####
# take a look at the available lifespan data
dl <-
df %>%
filter(ln_r_rlifespan != "NA")
#### looking at more specific genome data ####
# let's take a look at plotting the difference in genome size based on sex determination
dg <-
dl %>%
filter(gs_diff_mb != "NA")
# fix the values for female heterogametic species so that they show homogametic - heterogametic
dg$gs_diff_mb <- ifelse(dg$sex_determination == "female heterogametic", -dg$gs_diff_mb, dg$gs_diff_mb)
# Create a scatter plot with a linear regression line
dg %>%
ggplot(aes(x=ln_r_rlifespan, y=gs_diff_mb, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, linewidth=0.5) +
geom_point() +
theme_minimal()
# Create a scatter plot with a linear regression line
p <- dg %>%
ggplot(aes(x=ln_r_rlifespan, y=gs_diff_mb, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, linewidth=0.5) +
geom_point() +
theme_minimal()
plotly(p)
ggplotly(p)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(plotly)
m1 <- glm(data=dl, formula = ln_r_rlifespan ~ sex_determination)
summary(m1) # suggests that the sex_determination predictor is statistically significant
# lets make a horrible overfit model for funsies
m2 <- glm(data=dl, formula = ln_r_rlifespan ~ sex_determination*population_source*lifespan_data_type)
compare_performance(m1,m2, rank = TRUE)
# we get a warning messages that has to do with varying rows of NAs, ignoring for now
step <- stepAIC(m2)
# AIC will find the simplelist best model
step$formula # this spits out the best simplified model
mod_best <- glm(data=dl, formula = step$formula)
compare_performance(m1,m2,mod_best, rank = TRUE)
s <- compare_performance(m1,m2,mod_best, rank = TRUE)
s$Performance_Score
View(s)
s %>%
select(-c('Model','R2','RMSE','AIC weights','Performance-Score'))
s %>%
select(-c('Model','R2','RMSE','AIC_wt','Performance-Score'))
s %>%
select(-c('Model','R2','RMSE','AIC_wt','Performance_Score'))
s %>%
select(-c('Model','R2','RMSE','AIC_wt','Performance_Score'))
s %>%
select(c('Model','R2','RMSE','AIC_wt','Performance_Score'))
summary(mod_best) # sex determination seems to have the best affect
# add predictions to dl
dl %>%
gather_predictions(mod_best)
# add predictions to dl
dl %>%
gather_predictions(mod_best) %>%
ggplot(aes(x=ln_r_rlifespan,y=species, color=sex_determination)) +
geom_point() +
geom_vline(xintercept = 0) +
theme(axis.text.y = element_text(size=7))
# add predictions to dl
dl %>%
gather_predictions(mod_best) %>%
ggplot(aes(x=pred,y=species, color=sex_determination)) +
geom_point() +
geom_vline(xintercept = 0) +
theme(axis.text.y = element_text(size=7))
dl %>%
gather_predictions(mod_best) %>% view
dg %>%
ggplot(aes(x=gs_diff_mb, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, size=0.5) +
geom_point() +
theme_minimal()
# explain the line seen above
lm_mod <- lm(gs_diff_mb ~ ln_r_rlifespan, dg)
lm_mod1 <- lm(ln_r_rlifespan ~ gs_diff_mb, dg)
sum_lm_mod <- summary(lm_mod)
sum_lm_mod$r.squared # 0.04240
# equation: y = 1.1276 + 0.0002x
plot(lm_mod1)
# equation: y = 1.1276 + 0.0002x
plot(lm_mod1)
dg %>%
ggplot(aes(x=gs_diff_mb, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, size=0.5) +
geom_point() +
theme_minimal()
dg1 <- dg[dg$gs_diff_mb < 250 & dg$gs_diff_mb > -250,]
lm_mod2 <- lm(ln_r_rlifespan ~ gs_diff_mb, dg1)
sum_lm_mod2 <- summary(lm_mod2)
sum_lm_mod2$r.squared # 0.005538
# equation: y = 1.1276 + 0.0004x
plot(lm_mod2)
m1 <- glm(ln_r_lifespan ~ gs_diff_mb, dg1)
dg1 <- dg[dg$gs_diff_mb < 250 & dg$gs_diff_mb > -250,]
lm_mod2 <- lm(ln_r_rlifespan ~ gs_diff_mb, dg1)
sum_lm_mod2 <- summary(lm_mod2)
sum_lm_mod2$r.squared # 0.005538
m1 <- glm(ln_r_lifespan ~ gs_diff_mb, dg1)
m1 <- glm(ln_r_rlifespan ~ gs_diff_mb, dg1)
m1 <- glm(ln_r_rlifespan ~ gs_diff_mb, dg1)
lm_mod2 <- lm(ln_r_rlifespan ~ gs_diff_mb, dg1)
sum_lm_mod2 <- summary(lm_mod2)
View(dg1)
dg1$names
names(dg1)
glm(ln_r_rlifespan ~ gs_diff_mb, dg1)
lm(ln_r_rlifespan ~ gs_diff_mb, dg2)
lm(ln_r_rlifespan ~ gs_diff_mb, dg1)
glm(ln_r_rlifespan ~ gs_diff_mb, dg1)
#### load in and check out the data ####
# read in the data
df <- read_csv("analysis_data.csv") %>%
janitor::clean_names() %>%
mutate_at('ln_r_rlifespan', as.numeric)
#### looking at lifespan data with larger subset ####
# take a look at the available lifespan data
dl <-
df %>%
filter(ln_r_rlifespan != "NA")
#### looking at more specific genome data ####
# let's take a look at plotting the difference in genome size based on sex determination
dg <-
dl %>%
filter(gs_diff_mb != "NA")
dg1 <- dg[dg$gs_diff_mb < 250 & dg$gs_diff_mb > -250,]
glm(ln_r_rlifespan ~ gs_diff_mb, dg1)
glm(ln_r_rlifespan ~ gs_diff_mb, dg)
View(dg)
View(df)
View(dg)
dg$names
names(dg)
glm(ln_r_rlifespan ~ gs_diff_mb, dg)
glm(ln_r_rlifespan ~ gs_diff_mb, dg)
glm(data=dg1, formula= ln_r_rlifespan ~ gs_diff_mb)
m1 <- glm(data=dg1, formula= ln_r_rlifespan ~ gs_diff_mb)
m <- glm(data=dg1, formula= ln_r_rlifespan ~ gs_diff_mb)
dg1 %>%
gather_predictions(m) %>%
ggplot(aes(x=pred, y=gs_diff_mb, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, linewidth=0.5) +
geom_point() +
theme_minimal()
#complicated model
mess <- glm(data = dg1,
formula = ln_r_rlifespan ~ gs_diff_mb*sex_determination*population_source)
step <- stepAIC(mess)
# AIC will find the simplelist best model
step$formula # this spits out the best simplified model
#complicated model
mess <- glm(data = dg1,
formula = ln_r_rlifespan ~ gs_diff_mb*sex_determination*population_source)
step <- stepAIC(mess)
View(dg1)
#complicated model
mess <- glm(data = dg1,
formula = ln_r_rlifespan ~ gs_diff_mb*sex_determination)
step <- stepAIC(mess)
# AIC will find the simplelist best model
step$formula # this spits out the best simplified model
mod_best <- glm(data=dl, formula = step$formula)
s <- compare_performance(m1,m2,mod_best, rank = TRUE)
compare_performance(m,mess,mod_best, rank = TRUE)
summary(m)
lm_mod2 <- lm(ln_r_rlifespan ~ gs_diff_mb, dg1)
sum_lm_mod2 <- summary(lm_mod2)
dg1 <- dg[dg$gs_diff_mb < 250 & dg$gs_diff_mb > -250,]
lm_mod2 <- lm(ln_r_rlifespan ~ gs_diff_mb, dg1)
sum_lm_mod2 <- summary(lm_mod2)
sum_lm_mod2
dg1 %>%
gather_predictions(lm_mod2) %>%
ggplot(aes(x=pred, y=gs_diff_mb, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, linewidth=0.5) +
geom_point() +
theme_minimal()
sum_lm_mod2$r.squared # 0.005538
dg1 <- dg[dg$gs_diff_mb < 250 & dg$gs_diff_mb > -250,]
lm_mod2 <- lm(ln_r_rlifespan ~ gs_diff_mb, dg1)
sum_lm_mod2 <- summary(lm_mod2)
sum_lm_mod2$r.squared # 0.005538
View(dg1)
#### looking at more specific genome data ####
# let's take a look at plotting the difference in genome size based on sex determination
dg <-
dl %>%
filter(gs_diff_mb != "NA")
# fix the values for female heterogametic species so that they show homogametic - heterogametic
dg$gs_diff_mb <- ifelse(dg$sex_determination == "female heterogametic", -dg$gs_diff_mb, dg$gs_diff_mb)
dg1 <- dg[dg$gs_diff_mb < 250 & dg$gs_diff_mb > -250,]
lm_mod2 <- lm(ln_r_rlifespan ~ gs_diff_mb, dg1)
sum_lm_mod2 <- summary(lm_mod2)
sum_lm_mod2$r.squared # 0.005538
sum_lm_mod2
dg1 %>%
gather_predictions(lm_mod2) %>%
ggplot(aes(x=pred, y=gs_diff_mb, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, linewidth=0.5) +
geom_point() +
theme_minimal()
dg1 %>%
gather_predictions(mess) %>%
ggplot(aes(x=pred, y=gs_diff_mb, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, linewidth=0.5) +
geom_point() +
theme_minimal()
dg1 %>%
gather_predictions(m) %>%
ggplot(aes(x=pred, y=gs_diff_mb, color=sex_determination)) +
geom_point() +
theme_minimal()
dg1 %>%
gather_predictions(m) %>%
ggplot(aes(x=gs_diff_mb, y=pred, color=sex_determination)) +
geom_point() +
theme_minimal()
View(dg1)
# add predictions to dl
dl %>%
gather_predictions(mod_best) %>%
ggplot(aes(x=pred,y=species, color=sex_determination)) +
geom_point() +
geom_vline(xintercept = 0) +
theme(axis.text.y = element_text(size=7))
m1 <- glm(data=dl, formula = ln_r_rlifespan ~ sex_determination)
summary(m1) # suggests that the sex_determination predictor is statistically significant
# lets make a horrible overfit model for funsies
m2 <- glm(data=dl, formula = ln_r_rlifespan ~ sex_determination*population_source*lifespan_data_type)
compare_performance(m1,m2, rank = TRUE)
# we get a warning messages that has to do with varying rows of NAs, ignoring for now
step <- stepAIC(m2)
# AIC will find the simplelist best model
step$formula # this spits out the best simplified model
mod_best <- glm(data=dl, formula = step$formula)
s <- compare_performance(m1,m2,mod_best, rank = TRUE)
summary(mod_best) # sex determination seems to have the best affect
s %>%
select(c('Model','R2','RMSE','AIC_wt','Performance_Score'))
# add predictions to dl
dl %>%
gather_predictions(mod_best) %>%
ggplot(aes(x=pred,y=species, color=sex_determination)) +
geom_point() +
geom_vline(xintercept = 0) +
theme(axis.text.y = element_text(size=7))
# add predictions to dl
dl %>%
gather_predictions(mod_best) %>%
ggplot(aes(x=pred,y=sex_determination, color=sex_determination)) +
geom_point() +
geom_vline(xintercept = 0) +
theme(axis.text.y = element_text(size=7))
# AIC will find the simplelist best model
step$formula # this spits out the best simplified model
# add predictions to dl
dl %>%
gather_predictions(mod_best) %>%
ggplot(aes(x=pred,y=species, color=sex_determination)) +
geom_point() +
geom_vline(xintercept = 0) +
theme(axis.text.y = element_text(size=7))
dl %>%
gather_predictions(mod_best) %>% view
dg %>%
ggplot(aes(x=gs_diff_mb, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, size=0.5) +
geom_point() +
theme_minimal()
# this plot is set so that the predictor is on the x-axis, and response is on y-axis
dg[dg$gs_diff_mb < 100 & dg$gs_diff_mb > -100,] %>%
ggplot(aes(x=gs_diff_mb, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm", se=FALSE , color='gray', linetype=2, size=0.5) +
geom_point() +
labs(x="Difference in Genome Size", y="Difference in Lifespan") +
theme_minimal()
# this plot is set so that the predictor is on the x-axis, and response is on y-axis
dg[dg$gs_diff_mb < 250 & dg$gs_diff_mb > -250,] %>%
ggplot(aes(x=gs_diff_mb, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm", se=FALSE , color='gray', linetype=2, size=0.5) +
geom_point() +
labs(x="Difference in Genome Size", y="Difference in Lifespan") +
theme_minimal()
dg1 %>%
gather_predictions(m) %>%
ggplot(aes(x=gs_diff_mb, y=pred, color=sex_determination)) +
geom_point() +
theme_minimal()
p <- dg %>%
ggplot(aes(x=gs_diff_mb, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, size=0.5) +
geom_point() +
theme_minimal()
ggplotly(p)
p <- dg %>%
ggplot(aes(x=gs_diff_mb, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, size=0.5) +
geom_point() +
theme_minimal()
ggplotly(p)
ggplotly(p)
# this plot is set so that the predictor is on the x-axis, and response is on y-axis
p <- dg[dg$gs_diff_mb < 250 & dg$gs_diff_mb > -250,] %>%
ggplot(aes(x=gs_diff_mb, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm", se=FALSE , color='gray', linetype=2, size=0.5) +
geom_point() +
labs(x="Difference in Genome Size", y="Difference in Lifespan") +
theme_minimal()
ggplotly(p)
?pt()
sum_lm_mod2
library(Biostrings)
library(DECIPHER)
library(phangorn)
library(ggtree)
library(ape)
library(tidyverse)
library(janitor)
library(ggmsa)
library(treedata.table)
# create phylogenetic tree of the smaller subset of species
gimme_fast <- readDNAStringSet("accession/coi_seq_format.fasta") # read in multi fasta as a string set
alignment <- AlignSeqs(gimme_fast) # perform profile-to-profile alignment DECIPHER
# get a multiple alignment
mult_alignment <- DNAMultipleAlignment(alignment)
ggmsa(mult_alignment, start = 221, end = 280, color = "Shapely_NT", char_width = 0.5, seq_name = T) + geom_msaBar()
ggsave("tree/mult_alignment.png")
ggmsa(mult_alignment, start = 350, end = 400, color = "Shapely_NT", char_width = 0.5, seq_name = T) + geom_msaBar()
ggsave("tree/mult_alignment.png")
ggsave("tree/mult_alignment.png")
# other tree
treemafft <- read.nexus("tree/first_tree") # better tree made with Dr. Hjelmen
# make sure data has the same amount as tree tips
p <- ggtree(treemafft)
p2 <- p+geom_tippoint(aes(colour=as.numeric(td$dat$life)),
data=p$data %>% dplyr::filter(isTip==TRUE),
size=3) +
scale_colour_gradient(low='blue', high='Orange', name = "Difference in Lifespan")
p2 + geom_tiplab(linesize=.5,offset = 0.02) + ggplot2::xlim(0, 1)
# other tree
treemafft <- read.nexus("tree/first_tree") # better tree made with Dr. Hjelmen
new_tiplabels <- c("Amblyomma cajennense","Aphelocoma coerulescens","Callosobruchus maculatus",
"Cochliomyia hominivorax","Drosophila ananassae","Drosophila erecta",
"Drosophila kikkawai","Drosophila melanogaster","Drosophila mojavensis",
"Drosophila montana","Drosophila mulleri","Drosophila sechellia",
"Drosophila simulans","Drosophila virilis","Drosophila yakuba",
"Episyrphus balteatus","Lucilia cuprina","Nauphoeta cinerea",
"Ovis aries","Pan troglodytes","Symphalangus syndactylus",
"Chrysomya megacephala","Drosophila bipectinata","Musca domestica",
"Periplaneta americana")
treemafft$tip.label <- new_tiplabels
td <- as.treedata.table(tree = treemafft, data=d1)
df <- read_csv("short_complete_data.csv")
d1 <- data.frame(correct_species = df$species,
life=df$ln_r_rlifespan,
gs_diff=df$gs_diff_mb,
sex=df$sex_determination)
td <- as.treedata.table(tree = treemafft, data=d1)
# make sure data has the same amount as tree tips
p <- ggtree(treemafft)
p2 <- p+geom_tippoint(aes(colour=as.numeric(td$dat$life)),
data=p$data %>% dplyr::filter(isTip==TRUE),
size=3) +
scale_colour_gradient(low='blue', high='Orange', name = "Difference in Lifespan")
p2 + geom_tiplab(linesize=.5,offset = 0.02) + ggplot2::xlim(0, 1)
p2 <- p+geom_tippoint(aes(colour=as.numeric(td$dat$gs_diff)),
data=p$data %>% dplyr::filter(isTip==TRUE),
size=3) +
scale_colour_gradient(low='green', high='blue', name = "Difference in Genome Size")
p2 + geom_tiplab(linesize=.5,offset = 0.02) + ggplot2::xlim(0, 1)
p2 <- p+geom_tippoint(aes(colour=as.numeric(td$dat$gs_diff)),
data=p$data %>% dplyr::filter(isTip==TRUE),
size=3) +
scale_colour_gradient(low='green', high='red', name = "Difference in Genome Size")
p2 + geom_tiplab(linesize=.5,offset = 0.02) + ggplot2::xlim(0, 1)
sub_treemafft <- drop.tip(treemafft, tip = 20) # removes pan troglodytes because we know that one is weird and wrong
sub_treemafft <- drop.tip(sub_treemafft, tip = 19) # removes ovis aries because it is so big we can't see anything else
sub_treemafft <- drop.tip(sub_treemafft, tip = 1) # removes Amblyomma cajennense because it is big
p <- ggtree(treemafft)
p2 <- p+geom_tippoint(aes(colour=as.numeric(td$dat$gs_diff)),
data=p$data %>% dplyr::filter(isTip==TRUE),
size=3) +
scale_colour_gradient(low='green', high='red', name = "Difference in Genome Size")
p2 + geom_tiplab(linesize=.5,offset = 0.02) + ggplot2::xlim(0, 1)
p <- ggtree(sub_treemafft)
p2 <- p+geom_tippoint(aes(colour=as.numeric(td$dat$gs_diff)),
data=p$data %>% dplyr::filter(isTip==TRUE),
size=3) +
scale_colour_gradient(low='green', high='red', name = "Difference in Genome Size")
p2 + geom_tiplab(linesize=.5,offset = 0.02) + ggplot2::xlim(0, 1)
td
td$dat$tip.label
View(sub_treemafft)
td$dat$life[-c("Ovis aries")]
td$dat$life[-c("Ovis aries"),]
td$dat %>%
filter(tip.label != c("Ovis aries"))
td$dat %>%
filter(tip.label != c("Ovis aries", "Pan troglodytes", "Amblyomma cagennense"))
td$dat %>%
filter(tip.label != c("Ovis aries", "Pan troglodytes", "Amblyomma cajennense"))
td$dat %>%
filter(tip.label != c("Ovis aries", "Pan troglodytes", "Amblyomma cajennense"))
td$dat %>%
filter(tip.label != c("Ovis aries", "Pan troglodytes"))
wut <- td$dat %>%
filter(tip.label != c("Ovis aries", "Pan troglodytes", "Amblyomma cajennense"))
View(wut)
wut <- td$dat
wut <-wut %>%
filter(tip.label != c("Ovis aries", "Pan troglodytes", "Amblyomma cajennense"))
View(wut)
wut <-wut %>%
filter(-c("Ovis aries", "Pan troglodytes", "Amblyomma cajennense"))
wut <- wut[wut$tip.label != c("Ovis aries", "Pan troglodytes", "Amblyomma cajennense"),]
wut <- td$dat %>%
filter(tip.label != c("Ovis aries", "Pan troglodytes"))
wut <- td$dat %>%
filter(tip.label != c("Ovis aries", "Pan troglodytes")) %>%
filter(tip.label != c("Amblyomma cajennense"))
p2 <- p+geom_tippoint(aes(colour=as.numeric(wut$gs_diff)),
data=p$data %>% dplyr::filter(isTip==TRUE),
size=3) +
scale_colour_gradient(low='green', high='purple', name = "Difference in Genome Size")
p2 + geom_tiplab(linesize=.5,offset = 0.02) + ggplot2::xlim(0, 1)
p2 <- p+geom_tippoint(aes(colour=as.numeric(wut$gs_diff)),
data=p$data %>% dplyr::filter(isTip==TRUE),
size=3) +
scale_colour_gradient(low='blue', high='orange', name = "Difference in Genome Size")
p2 + geom_tiplab(linesize=.5,offset = 0.02) + ggplot2::xlim(0, 1)
p2 <- p+geom_tippoint(aes(colour=as.numeric(wut$gs_diff)),
data=p$data %>% dplyr::filter(isTip==TRUE),
size=3) +
scale_colour_viridis_c()
p2 + geom_tiplab(linesize=.5,offset = 0.02) + ggplot2::xlim(0, 1)
p2 <- p+geom_tippoint(aes(colour=as.numeric(wut$gs_diff)),
data=p$data %>% dplyr::filter(isTip==TRUE),
size=3) +
scale_colour_viridis_c(name = "Difference in Genome Size")
p2 + geom_tiplab(linesize=.5,offset = 0.02) + ggplot2::xlim(0, 1)
ggsave("tree/gradient_tree2.png")
ggsave("tree/gradient_tree2.png")
