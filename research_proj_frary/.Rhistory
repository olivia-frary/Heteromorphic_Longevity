ape::write.tree(tree2, file='tree2.txt')
tree2 <- read.tree("tree2.txt") # load the tree file in
p <- ggtree(tree2) +
geom_tiplab(size=2)
# add in the data you want
# currently this plot shows 22 of the 25 observations in a neighbor based phylogeny
df <- read_csv("short_complete_data.csv") %>%
filter(species != c("Ovis aries","Pan troglodytes")) %>%
filter(species != "Amblyomma cajennense")
d1 <- data.frame(id=tree2$tip.label,
life=df$ln_r_rlifespan,
gs_diff=df$gs_diff_mb,
sex=df$sex_determination)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=d1,
geom=geom_point,
mapping=aes(x=life, color=sex))
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=d1,
geom=geom_segment,
aes(x=0, xend=gs_diff, y=y, yend=y, color=sex), size=10)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5)
ggsave("facet_tree.png")
library(tidyverse)
library(readr)
library(janitor)
library(skimr)
library(GGally)
library(shiny)
#### load in and check out the data ####
# read in the data
df <- read_csv("analysis_data.csv") %>%
clean_names %>%
mutate_at('ln_r_rlifespan', as.numeric)
head(df) # take a look at the variables
names(df) # remember the names for later entry
glimpse(df) # shows variables and data types
skim(df) # shows distribution of data... not sure I will use this except for critique
#### looking at lifespan data with larger subset ####
# take a look at the available lifespan data
dl <-
df %>%
filter(ln_r_rlifespan != "NA")
#### looking at lifespan data with larger subset ####
# take a look at the available lifespan data
dl <-
df %>%
filter(ln_r_rlifespan != "NA")
# try to re order the species by family - so far no luck with reorder or sort
dl %>%
ggplot(aes(x=ln_r_rlifespan,y=species, color=sex_determination)) +
geom_point() +
geom_vline(xintercept = 0) +
theme(axis.text.y = element_text(size=7))
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
```{r plot_subset_genome_size}
# read in my data and only use the data that I have both lifespan and genome size data for
#read in list of species
spec<-read.csv("./lifespan_species.csv")
write.csv(accession_out,"accession_numbers.csv", row.names = FALSE)
library(ape)
library(seqinr)
library(janitor)
library(tidyverse)
# read in your file of accession numbers to feed into script
df <- read_csv("accession_numbers_fixed.csv") %>%
clean_names()
# read in your file of accession numbers to feed into script
df <- read_csv("accession/accession_numbers_fixed.csv") %>%
clean_names()
# read in my data and only use the data that I have both lifespan and genome size data for
#read in list of species
spec<-read.csv("lifespan_species.csv")
# read in your file of accession numbers to feed into script
df <- read_csv("accession/accession_numbers_fixed.csv") %>%
clean_names()
gene_accession_numbers <- df$coi_acc
# Fetching the sequences from GenBank
gene_sequences <- read.GenBank(gene_accession_numbers)
#accession number corresponding to species names/gene
gene_sequences_GenBank_IDs <- paste(attr(gene_sequences, "species"), names(gene_sequences), sep=" coi ")
# Write the sequences to a FASTA file
write.dna(gene_sequences, file = "accession/coi.fasta", format = "fasta", append = FALSE)
# Read the sequences from the FASTA file
gene_seq_format <- read.FASTA(file = "accession/coi.fasta")
# Modify the names of the sequences
names(gene_seq_format) <- gene_sequences_GenBank_IDs
# Write sequences to a new FASTA file
write.FASTA(gene_seq_format, file = "accession/coi_seq_format.fasta")
tree <- read.tree("tree/tree.txt")
# add in the data you want
# currently this plot shows 22 of the 25 observations in a neighbor based phylogeny
df <- read_csv("short_complete_data.csv") %>%
filter(species != c("Ovis aries","Pan troglodytes")) %>%
filter(species != "Amblyomma cajennense")
d1 <- data.frame(id=tree2$tip.label,
life=df$ln_r_rlifespan,
gs_diff=df$gs_diff_mb,
sex=df$sex_determination)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=d1,
geom=geom_point,
mapping=aes(x=life, color=sex))
ape::write.tree(tree2, file='tree/tree2.txt')
p <- ggtree(tree2) +
geom_tiplab(size=2)
# add in the data you want
# currently this plot shows 22 of the 25 observations in a neighbor based phylogeny
df <- read_csv("short_complete_data.csv") %>%
filter(species != c("Ovis aries","Pan troglodytes")) %>%
filter(species != "Amblyomma cajennense")
d1 <- data.frame(id=tree2$tip.label,
life=df$ln_r_rlifespan,
gs_diff=df$gs_diff_mb,
sex=df$sex_determination)
ape::write.tree(tree2, file='tree/tree2.txt')
ape::write.tree(tree2, file='tree/tree2.txt')
tree <- read.tree("tree/tree.txt")
options(ignore.negative.edge=TRUE) # WHAT IS THIS
ggtree(tree, layout = "rectangular") +
geom_tiplab(align=TRUE, linesize=.5)
tree2 <- drop.tip(tree, tip = 12) # removes pan troglodytes because we know that one is weird and wrong
tree2 <- drop.tip(tree2, tip = 11) # removes ovis aries because it is so big we can't see anything else
tree2 <- drop.tip(tree2, tip = 1)
tree2$tip.label
ape::write.tree(tree2, file='tree/tree2.txt')
tree2 <- read.tree("tree/tree2.txt") # load the tree file in
p <- ggtree(tree2) +
geom_tiplab(size=2)
# add in the data you want
# currently this plot shows 22 of the 25 observations in a neighbor based phylogeny
df <- read_csv("short_complete_data.csv") %>%
filter(species != c("Ovis aries","Pan troglodytes")) %>%
filter(species != "Amblyomma cajennense")
d1 <- data.frame(id=tree2$tip.label,
life=df$ln_r_rlifespan,
gs_diff=df$gs_diff_mb,
sex=df$sex_determination)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=d1,
geom=geom_point,
mapping=aes(x=life, color=sex))
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=d1,
geom=geom_segment,
aes(x=0, xend=gs_diff, y=y, yend=y, color=sex), size=10)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5)
ggsave("tree/facet_tree.png")
ggsave("tree/facet_tree.png")
ggsave("tree/facet_tree.png")
ggsave("tree/facet_tree.png")
ggsave("tree/facet_tree.png")
# create phylogenetic tree of the smaller subset of species
gimme_fast <- readDNAStringSet("accession/coi_seq_format.fasta") # read in multi fasta as a string set
alignment <- AlignSeqs(gimme_fast) # perform profile-to-profile alignment
distance <- dist.dna(as.DNAbin(alignment)) # find pairwise distances
tree <- njs(distance) # have to use this because there is studd missing from the distance matrix
ape::write.tree(tree, file='tree/tree.txt') # write tree out in newick format
tree <- read.tree("tree/tree.txt")
options(ignore.negative.edge=TRUE) # WHAT IS THIS
ggtree(tree, layout = "rectangular") +
geom_tiplab(align=TRUE, linesize=.5)
tree2 <- drop.tip(tree, tip = 12) # removes pan troglodytes because we know that one is weird and wrong
tree2 <- drop.tip(tree2, tip = 11) # removes ovis aries because it is so big we can't see anything else
tree2 <- drop.tip(tree2, tip = 1)
ape::write.tree(tree2, file='tree/tree2.txt')
tree2 <- read.tree("tree/tree2.txt") # load the tree file in
p <- ggtree(tree2) +
geom_tiplab(size=2)
# add in the data you want
# currently this plot shows 22 of the 25 observations in a neighbor based phylogeny
df <- read_csv("short_complete_data.csv") %>%
filter(species != c("Ovis aries","Pan troglodytes")) %>%
filter(species != "Amblyomma cajennense")
d1 <- data.frame(id=tree2$tip.label,
life=df$ln_r_rlifespan,
gs_diff=df$gs_diff_mb,
sex=df$sex_determination)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=d1,
geom=geom_point,
mapping=aes(x=life, color=sex))
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=d1,
geom=geom_segment,
aes(x=0, xend=gs_diff, y=y, yend=y, color=sex), size=10)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5)
ggsave("tree/facet_tree.png")
ape::write.tree(tree2, file='tree/tree2.txt')
tree2 <- read.tree("tree/tree2.txt") # load the tree file in
library(Biostrings)
library(DECIPHER)
library(phangorn)
library(ggtree)
library(ape)
library(tidyverse)
library(janitor)
tree2 <- read.tree("tree/tree2.txt") # load the tree file in
p <- ggtree(tree2) +
geom_tiplab(size=2)
# add in the data you want
# currently this plot shows 22 of the 25 observations in a neighbor based phylogeny
df <- read_csv("short_complete_data.csv") %>%
filter(species != c("Ovis aries","Pan troglodytes")) %>%
filter(species != "Amblyomma cajennense")
d1 <- data.frame(id=tree2$tip.label,
life=df$ln_r_rlifespan,
gs_diff=df$gs_diff_mb,
sex=df$sex_determination)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=d1,
geom=geom_point,
mapping=aes(x=life, color=sex))
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=d1,
geom=geom_segment,
aes(x=0, xend=gs_diff, y=y, yend=y, color=sex), size=10)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5)
options(ignore.negative.edge=TRUE) # WHAT IS THIS - i did this to stop the tree going back on itself
tree2 <- read.tree("tree/tree2.txt") # load the tree file in
p <- ggtree(tree2) +
geom_tiplab(size=2)
# add in the data you want
# currently this plot shows 22 of the 25 observations in a neighbor based phylogeny
df <- read_csv("short_complete_data.csv") %>%
filter(species != c("Ovis aries","Pan troglodytes")) %>%
filter(species != "Amblyomma cajennense")
d1 <- data.frame(id=tree2$tip.label,
life=df$ln_r_rlifespan,
gs_diff=df$gs_diff_mb,
sex=df$sex_determination)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=d1,
geom=geom_point,
mapping=aes(x=life, color=sex))
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=d1,
geom=geom_segment,
aes(x=0, xend=gs_diff, y=y, yend=y, color=sex), size=10)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5)
p <- ggtree(tree2) +
geom_tiplab(size=2)
ggtree(tree, layout = "rectangular")
tree <- read.tree("tree/tree.txt")
options(ignore.negative.edge=TRUE) # WHAT IS THIS - i did this to stop the tree going back on itself
ggtree(tree, layout = "rectangular")
tree2 <- drop.tip(tree, tip = 12) # removes pan troglodytes because we know that one is weird and wrong
tree2 <- drop.tip(tree2, tip = 11) # removes ovis aries because it is so big we can't see anything else
tree2 <- drop.tip(tree2, tip = 1)
ape::write.tree(tree2, file='tree/tree2.txt')
tree2 <- read.tree("tree/tree2.txt") # load the tree file in
p <- ggtree(tree2) +
geom_tiplab(size=2)
# add in the data you want
# currently this plot shows 22 of the 25 observations in a neighbor based phylogeny
df <- read_csv("short_complete_data.csv") %>%
filter(species != c("Ovis aries","Pan troglodytes")) %>%
filter(species != "Amblyomma cajennense")
# add in the data you want
# currently this plot shows 22 of the 25 observations in a neighbor based phylogeny
df <- read_csv("short_complete_data.csv") %>%
filter(species != c("Ovis aries","Pan troglodytes")) %>%
filter(species != "Amblyomma cajennense")
d1 <- data.frame(id=tree2$tip.label,
life=df$ln_r_rlifespan,
gs_diff=df$gs_diff_mb,
sex=df$sex_determination)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=d1,
geom=geom_point,
mapping=aes(x=life, color=sex))
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=d1,
geom=geom_segment,
aes(x=0, xend=gs_diff, y=y, yend=y, color=sex), size=10)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5)
ggtree(tree, layout = "rectangular")
p <- ggtree(tree2)
# add in the data you want
# currently this plot shows 22 of the 25 observations in a neighbor based phylogeny
df <- read_csv("short_complete_data.csv") %>%
filter(species != c("Ovis aries","Pan troglodytes")) %>%
filter(species != "Amblyomma cajennense")
d1 <- data.frame(id=tree2$tip.label,
life=df$ln_r_rlifespan,
gs_diff=df$gs_diff_mb,
sex=df$sex_determination)
p2 <- facet_plot(p, panel="Difference in Lifespan",
data=d1,
geom=geom_point,
mapping=aes(x=life, color=sex))
p3 <- facet_plot(p2, panel="Difference in Genome Size",
data=d1,
geom=geom_segment,
aes(x=0, xend=gs_diff, y=y, yend=y, color=sex), size=10)
p3 + theme_tree2() + geom_vline(xintercept = 0, alpha=0.5)
tree <- read.tree("tree/tree.txt")
options(ignore.negative.edge=TRUE) # WHAT IS THIS - i did this to stop the tree going back on itself
ggtree(tree, layout = "rectangular") +
geom_tiplab(align=TRUE, linesize=.5)
library(tidyverse)
library(readr)
library(janitor)
library(skimr)
library(GGally)
library(shiny)
df <- read_csv("analysis_data.csv") %>%
clean_names %>%
mutate_at('ln_r_rlifespan', as.numeric)
head(df) # take a look at the variables
names(df) # remember the names for later entry
glimpse(df) # shows variables and data types
skim(df) # shows distribution of data... not sure I will use this except for critique
# ggpairs(df), there are too many species for this plot glance to be useful
# take a look at the available lifespan data
dl <-
df %>%
filter(ln_r_rlifespan != "NA")
# the response variables we are interested in are to do with lifespan
# the possible predictors are species, sex_determination, population_source,
# and lifespan_data_type
# as we move further to the smaller data set we will look at the difference in
# size between the heteromorphic sex chromosomes
# this plot shows the difference in lifespan based on species
# the more positive the value the greater the difference between the homogametic
# sex and heterogametic sex.
# try to re order the species by family - so far no luck with reorder or sort
dl %>%
ggplot(aes(x=ln_r_rlifespan,y=species, color=sex_determination)) +
geom_point() +
geom_vline(xintercept = 0) +
theme(axis.text.y = element_text(size=7))
# I would ideally like to add a phylogeny along the side of this plot
# but for now, here is a shiny app of this graph with interactive colors
# Shiny App
# runApp("longevity")
# let's check out if there seems to be relationships between lifespan and any
# of the other data
# this plot is another way of illustrating how much of the lifespan difference
# resides -above- zero.
dl %>%
ggplot(aes(x=sex_determination,y=ln_r_rlifespan, fill=sex_determination)) +
geom_violin() +
theme_minimal()
dl %>% names
m1 <- glm(data=dl, formula = ln_r_rlifespan ~ sex_determination)
summary(m1)
plot(m1) # most data is normally distributed - though this makes sense due to the log transformation
# lets make a horrible overfit model for funsies
m2 <- glm(data=dl, ln_r_rlifespan ~ sex_determination*population_source*lifespan_data_type)
compare_performance()
library(modelr)
compare_performance(m1,m2)
library(modelr)
library(MASS)
compare_performance(m1,m2)
library(easystats)
compare_performance(m1,m2)
compare_performance(m1,m2, rank = TRUE)
compare_performance(m1,m2, rank = TRUE) %>% plot
# we get a warning messages for these that we need to look into
step <- stepAIC(m2)
# AIC will find the simplelist best model
step$formula # this spits out the best simplified model
mod_best <- glm(data=dl, formula = step$formula)
compare_performance(m1,m2,mod_best) %>% plot
compare_performance(m1,m2,mod_best, rank = TRUE)
compare_performance(m1,m2,mod_best, rank = TRUE) %>% plot
compare_performance(m1,m2,mod_best, rank = TRUE) %>% plot
summary(mod_best)
#### looking at more specific genome data ####
# let's take a look at plotting the difference in genome size based on sex determination
dg <-
dl %>%
filter(gs_diff_mb != "NA")
# fix the values for female heterogametic species so that they show homogametic - heterogametic
dg$gs_diff_mb <- ifelse(dg$sex_determination == "female heterogametic", -dg$gs_diff_mb, dg$gs_diff_mb)
dg %>%
ggplot(aes(x=ln_r_rlifespan, y=gs_diff_mb, color=sex_determination)) +
geom_smooth(method="lm",se=FALSE, color='gray', linetype=2, size=0.5) +
geom_point() +
labs(x="Difference in Lifespan", y="Difference in Genome Size") +
theme_minimal()
# ignoring the points that reside outside of 100Mb difference on each side.
dg[dg$gs_diff_mb < 100 & dg$gs_diff_mb > -100,] %>%
ggplot(aes(x=ln_r_rlifespan, y=gs_diff_mb, color=sex_determination)) +
geom_smooth(method="lm", se=FALSE , color='gray', linetype=2, size=0.5) +
geom_point() +
labs(x="Difference in Lifespan", y="Difference in Genome Size") +
theme_minimal()
# I want to investigate the linear line being shown on this plot
lm(gs_diff_mb ~ ln_r_rlifespan, data = dg) %>% summary
lm(ln_r_rlifespan ~ gs_diff_mb, data = dg) %>% summary # what is it like with predictor and response in the right places?
# I want to investigate the linear line being shown on this plot
cor(dg$gs_diff_mb,dg$ln_r_rlifespan)
cor(dg$ln_r_rlifespan, dg$gs_diff_mb)
# try this again with the subset data because I think the correlation will change
sub <- dg[dg$gs_diff_mb < 100 & dg$gs_diff_mb > -100,]
cor(sub$gs_diff_mb,sub$ln_r_rlifespan)
my_cor <- cor(sub$gs_diff_mb,sub$ln_r_rlifespan) # yup we get a negative close to zero
# we have a very weak correlation that changes as outliers are removed
my_cor*sqrt(length(sub$species)-2) / sqrt(1-my_cor^2)
# we have a very weak correlation that changes as outliers are removed
cor_t <- my_cor*sqrt(length(sub$species)-2) / sqrt(1-my_cor^2)
pt(cor_t, df=(length(sub$species)-2), lower.tail = TRUE)*2
cor.test(sub$gs_diff_mb,sub$ln_r_rlifespan)
# fail to reject the null hypothesis that there is no linear association. We can
# not conclude that there is a linear association between gs_diff_mb and lifespan
cor.test(sub$gs_diff_mb,sub$ln_r_rlifespan, alternative = "greater")
# fail to reject the null hypothesis that there is no linear association. We can
# not conclude that there is a linear association between gs_diff_mb and lifespan
cor.test(sub$gs_diff_mb,sub$ln_r_rlifespan)
# this sums up the above work for the smaller subset way better
cor.test(sub$gs_diff_mb,sub$ln_r_rlifespan, alternative = "greater")
# this sums up the above work for the smaller subset way better
cor.test(sub$gs_diff_mb,sub$ln_r_rlifespan, alternative = "less")
# this sums up the above work for the smaller subset way better
cor.test(sub$gs_diff_mb,sub$ln_r_rlifespan, alternative = "greater")
# fail to reject the null hypothesis that there is no linear association. We can
# not conclude that there is a linear association between gs_diff_mb and lifespan
cor.test(sub$gs_diff_mb,sub$ln_r_rlifespan)
# r^2 = -0.07775808
(-0.07775808)^2
# r^2 = -0.07775808^2
(-0.07775808)^2 # percentage of the variability in y explained by x
lm(gs_diff_mb ~ ln_r_rlifespan, data = dg) %>% summary
lm(ln_r_rlifespan ~ gs_diff_mb, data = dg) %>% summary # what is it like with predictor and response in the right places?
dg[dg$gs_diff_mb < 100 & dg$gs_diff_mb > -100,] %>%
ggplot(aes(x=gs_diff_mb, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm", se=FALSE , color='gray', linetype=2, size=0.5) +
geom_point() +
labs(x="Difference in Lifespan", y="Difference in Genome Size") +
theme_minimal()
dg[dg$gs_diff_mb < 100 & dg$gs_diff_mb > -100,] %>%
ggplot(aes(x=gs_diff_mb, y=ln_r_rlifespan, color=sex_determination)) +
geom_smooth(method="lm", se=FALSE , color='gray', linetype=2, size=0.5) +
geom_point() +
labs(x="Difference in Genome Size", y="Difference in Lifespan") +
theme_minimal()
cor(d1$sex_determination,d1$ln_r_rlifespan)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
df <- read_csv("analysis_data.csv") %>%
clean_names %>%
mutate_at('ln_r_rlifespan', as.numeric)
df <- read_csv("analysis_data.csv")
df <- read_csv("analysis_data.csv") %>%
clean_names
library(janitor)
janitor::clean_names
df <- read_csv("analysis_data.csv") %>%
janitor::clean_names %>%
mutate_at('ln_r_rlifespan', as.numeric)
library(tidyverse)
library(readr)
library(janitor)
library(skimr)
library(GGally)
library(shiny)
library(modelr)
library(MASS)
library(easystats)
#### load in and check out the data ####
# read in the data
df <- read_csv("analysis_data.csv") %>%
clean_names %>%
mutate_at('ln_r_rlifespan', as.numeric)
library(tidyverse)
#### load in and check out the data ####
# read in the data
df <- read_csv("analysis_data.csv") %>%
clean_names %>%
mutate_at('ln_r_rlifespan', as.numeric)
df <- read_csv("analysis_data.csv") %>%
clean_names
#### load in and check out the data ####
# read in the data
df <- read_csv("analysis_data.csv") %>%
janitor::clean_names %>%
mutate_at('ln_r_rlifespan', as.numeric)
#### load in and check out the data ####
# read in the data
df <- read_csv("analysis_data.csv") %>%
janitor::clean_names() %>%
mutate_at('ln_r_rlifespan', as.numeric)
#### load in and check out the data ####
# read in the data
df <- read_csv("analysis_data.csv") %>%
clean_names() %>%
mutate_at('ln_r_rlifespan', as.numeric)
#### load in and check out the data ####
# read in the data
df <- read_csv("analysis_data.csv") %>%
janitor::clean_names() %>%
mutate_at('ln_r_rlifespan', as.numeric)
head(df) # take a look at the variables
dl %>%
ggplot(aes(x=ln_r_rlifespan,y=species, color=sex_determination)) +
geom_point() +
geom_vline(xintercept = 0) +
labs(x="Difference in Lifespan", y="Species", title="Difference in Lifespan between Homogametic and Heterogametic Sexes") +
theme_minimal()+
theme(axis.text.y = element_text(size=7))
dl <-
df %>%
filter(ln_r_rlifespan != "NA")
dl %>%
ggplot(aes(x=ln_r_rlifespan,y=species, color=sex_determination)) +
geom_point() +
geom_vline(xintercept = 0) +
labs(x="Difference in Lifespan", y="Species", title="Difference in Lifespan between Homogametic and Heterogametic Sexes") +
theme_minimal()+
theme(axis.text.y = element_text(size=7))
